name: Weeder
description: Annotate unused functions in a Haskell project
inputs:
  ghc-version:
    description: Full version of GHC your project uses (required)
    required: true
  weeder-arguments:
    description: |
      Arguments to pass when invoking weeder (default --require-hs-files)
    required: true
    default: --require-hs-files
  working-directory:
    description: Change to this directory before operating
    required: true
    default: .
  fail:
    description: Fail the build if unused functions found? (default true)
    required: true
    default: true
outputs:
  log:
    description: Path to file containing the output from weeder
    value: ${{ steps.weeder.outputs.log }}
runs:
  using: composite
  steps:
    - name: Install weeder
      uses: pbrisbin/setup-tool-action@v2
      with:
        name: weeder
        version: ${{ inputs.ghc-version }}
        url: "https://github.com/freckle/weeder-action/releases/download/Binaries/{name}-{version}-{os}-{arch}.{ext}"

    - id: weeder-version
      name: Record weeder version
      shell: bash
      run: |
        {
          printf 'result='
          weeder --version | sed '/^weeder version \(.*\)$/!d; s//\1/'
        } >>"$GITHUB_OUTPUT"

    - id: weeder-check
      name: Compare weeder version with v2.7
      uses: samcarswell/semver-compare-action@1.1
      with:
        left-semver: ${{ steps.weeder-version.outputs.result }}
        right-semver: 2.7.0

    - id: weeder
      name: Run weeder
      shell: bash
      env:
        # Value will be 1 if greater, 0 if equal
        CAN_TRUST_WEEDER_EXIT_CODE: |
          contains(fromJSON('[1, 0]'), steps.weeder-check.outputs.compare-value)
      run: |
        echo "::add-matcher::${{ github.action_path }}/matcher.json"
        trap 'echo "::remove-matcher owner=freckle-weeder::"' EXIT

        tmp=$(mktemp)
        echo "log=$tmp" >>"$GITHUB_OUTPUT"

        cd '${{ inputs.working-directory }}'
        prefix=$(echo '${{ inputs.working-directory }}' | sed 's|/$||')/
        weeder ${{ inputs.weeder-arguments }} |
          sed "s|^|$prefix|; "'s/$/ is not used by any defined root/' |
          tee "$tmp" || true

        ret=${PIPESTATUS[0]}
        echo "Weeder exit code: $ret"

        if ((!ret)); then
          echo "No unused functions found"
          exit 0
        fi

        # If we're configured to fail, we can always fail regardless of version
        if ${{ inputs.fail }}; then
          echo "Configured to fail and unused functions found"
          exit $ret
        fi

        # Otherwise, if we know we're v2.7+ and the exit code was not
        # weeds-found (288), we should still fail.
        if CAN_TRUST_WEEDER_EXIT_CODE && ((ret != 288)); then
          echo "Weeder encountered some other error" >&2
          exit $ret
        fi
