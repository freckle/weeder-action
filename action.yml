name: Weeder
description: Annotate unused functions in a Haskell project
inputs:
  working-directory:
    description: Change to this directory before operating
    required: true
    default: .
  stack-yaml:
    description: Path to stack.yaml, relative to working-directory
    required: true
    default: stack.yaml
  weeder-version:
    description: Version of weeder to install (default latest)
    required: true
    default: ""
  weeder-arguments:
    description: |
      Arguments to pass when invoking weeder (default --require-hs-files)
    required: true
    default: --require-hs-files
  fail:
    description: Fail the build if unused functions found? (default true)
    required: true
    default: true
outputs:
  log:
    description: Path to file containing the output from weeder
    value: ${{ steps.weeder.outputs.log }}
runs:
  using: composite
  steps:
    - name: Install weeder
      shell: bash
      run: |
        if [[ -n "${{ inputs.weeder-version }}" ]]; then
          package=weeder-${{ inputs.weeder-version }}
        else
          package=weeder
        fi

        cd '${{ inputs.working-directory }}'
        stack --stack-yaml '${{ inputs.stack-yaml }}' install \
          --copy-compiler-tool "$package"

    - id: weeder
      name: Run weeder
      shell: bash
      run: |
        echo "::add-matcher::${{ github.action_path }}/matcher.json"
        trap 'echo "::remove-matcher owner=freckle-weeder::"' EXIT

        tmp=$(mktemp)
        echo "::set-output name=log::$tmp"

        cd '${{ inputs.working-directory }}'
        prefix=$(echo '${{ inputs.working-directory }}' | sed 's|/$||')/
        stack --stack-yaml '${{ inputs.stack-yaml }}' exec -- \
          weeder ${{ inputs.weeder-arguments }} |
          sed "s|^|$prefix|; "'s/$/ is not used by any defined root/' |
          tee "$tmp" || true

        if ${{ inputs.fail }} && [[ -s "$tmp" ]]; then
          echo "Configured to fail and unused functions found"
          exit 1
        fi
