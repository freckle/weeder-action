name: Binaries

on:
  pull_request:

jobs:
  binaries:
    strategy:
      matrix:
        os:
          - ubuntu
          - macOS

          # The prep steps needs rewriting
          # - windows

        version:
          - 2.4.0 # GHC-9.2
          - 2.3.1 # GHC-9.0
          - 2.2.0 # GHC-8.8/10

        include:
          - os: ubuntu
            suffix: linux-x64.tar.gz
          - os: macOS
            suffix: darwin-x64.tar.gz
          # - os: windows
          #   suffix: win32-x64.zip

          - version: 2.4.0
            resolver: lts-20.3
          - version: 2.3.1
            resolver: lts-19.33
          - version: 2.2.0
            resolver: lts-18.28

      fail-fast: false

    runs-on: ${{ matrix.os }}-latest
    steps:
      - id: prep
        run: |
          archive=weeder-${{ matrix.version }}-${{ matrix.suffix }}
          exists=$(gh --repo '${{ github.repository }}' release view Binaries \
            --json assets \
            --jq ".assets[] | select(.name == \"$archive\") | \"true\"")

          printf 'resolver: ${{ matrix.resolver }}\npackages: []\n' >> stack.yaml
          echo "archive=$archive" >>"$GITHUB_OUTPUT"
          echo "exists=$exists" >>"$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ steps.prep.outputs.exists != 'true' }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.stack
            ./.stack-work
          key: ${{ runner.os }}-stack-${{ matrix.resolver }}-${{ matrix.version }}
          restore-keys: |
            ${{ runner.os }}-stack-${{ matrix.resolver }}-
            ${{ runner.os }}-stack-

      - if: ${{ steps.prep.outputs.exists != 'true' }}
        run: stack install weeder-${{ matrix.version }} --local-bin-path .

      - if: ${{ steps.prep.outputs.exists != 'true' && matrix.os != 'windows' }}
        run: tar -cvzf '${{ steps.prep.outputs.archive }}' ./weeder

      - if: ${{ steps.prep.outputs.exists != 'true' && matrix.os == 'windows' }}
        run: zip '${{ steps.prep.outputs.archive }}' ./weeder

      - if: ${{ steps.prep.outputs.exists != 'true' }}
        run: gh --repo '${{ github.repository }}' release upload Binaries '${{ steps.prep.outputs.archive }}'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
