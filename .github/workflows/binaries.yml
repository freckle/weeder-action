name: Binaries

on:
  workflow_dispatch:
  pull_request:

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: generate
        run: |
          cat >>"$GITHUB_OUTPUT" <<EOM
          matrix<<EOJSON
          $(./.github/bin/build-binaries-matrix)
          EOJSON
          EOM
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}

  binaries:
    needs: generate

    strategy:
      matrix: ${{ fromJSON(needs.generate.outputs.matrix) }}
      fail-fast: false

    runs-on: ${{ matrix.runner }}
    steps:
      - if: ${{ matrix.asset != 'none' }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.stack
            ./.stack-work
          key: ${{ runner.os }}-stack-${{ matrix.ghc }}
          restore-keys: |
            ${{ runner.os }}-stack-

      - if: ${{ matrix.asset != 'none' }}
        shell: bash
        run: |
          cat >stack.yaml <<'EOM'
          resolver: ${{ matrix.resolver }}
          packages: []
          extra-deps: [${{ matrix.extra-deps }}]
          EOM

          stack setup

          actual_ghc="$(stack query compiler actual)"
          wanted_ghc=ghc-${{ matrix.ghc }}

          if [[ "$actual_ghc" != "$wanted_ghc" ]]; then
            cat <<EOM
          The configured GHC does not match the binary we're intending to build:

            Actual: $actual_ghc
            Wanted: $wanted_ghc

          Update the resolver used for this build in build-binaries-matrix to
          one that matches the desired GHC.
          EOM
            exit 1
          fi

          stack install weeder-${{ matrix.version }} --local-bin-path .

          ${{ matrix.zip }} '${{ matrix.asset }}' ${{ matrix.exe }}
          gh --repo '${{ github.repository }}' release upload '${{ matrix.release }}' '${{ matrix.asset }}'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
